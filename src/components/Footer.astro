---
import Social from "./Social.vue";
import Watcher from "./../assets/watcher.png"
import {Image} from 'astro:assets';
---

<style>
    .disappear {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }
    #flash {
         position: fixed;
         top: 0;
         left: 0;
         width: 100%;
         height: 100%;
         background-color: white;
         opacity: 1;
        z-index: 1000;
         pointer-events: none;
         visibility: hidden;
     }
</style>
<div id="flash"></div>
<div class="flex justify-center mt-14 mb-10">
    <Social client:only="vue"/>
</div>
<div class="flex justify-center mb-10">
    <a class="mr-2" href="/datenschutz">Datenschutz</a>
    <a href="/zusatzangaben">Zusatzangaben</a>
</div>
<div id="watcher-kabuff" class="flex justify-center">
<div id="watcher" class="flex justify-center w-32 h-32 mb-0" onclick="handleWatcherClick(this)">
    <Image src={Watcher} densities={[1, 2, 3]} alt="Watcher" class="w-32 h-100 mb-0"
    />
</div>
</div>
<script is:inline>
    let clicked = false;
    const effects = [
        (_) => document.body.style.transform = `rotate(${Math.random() * 10 - 5}deg)`,
        (element) => element.style.transform = `translate(${Math.random() * 200 - 100}px, ${Math.random() * 200 - 100}px)`,
        (_) => {
            document.body.style.transition = "transform 0.1s";
            document.body.style.transform = "translateX(10px)";
            setTimeout(() => document.body.style.transform = "translateX(-10px)", 100);
            setTimeout(() => document.body.style.transform = "translateX(0)", 200);
        },
        (_) => new Audio("/magic-flutter.mp3").play(),
        (_) => document.body.style.transform = "scaleX(-1)",
        (element) => {
            let text = document.createElement("div");
            text.innerText = "HÃ¶r auf, mich anzuklicken!";
            document.getElementById("watcher-kabuff").appendChild(text);
            element.classList.add("disappear");
            setTimeout(() => {text.remove(); element.classList.remove("disappear")}, 3000);
        },
        (element) => element.style.transform += " scale(1.2)",
        (_) => {
        document.body.style.filter = "invert(100%)"
        setTimeout(() => {document.body.style.filter = "invert(0%)"}, 1000)
        },
                (_) => {
                    document.body.classList.add("disappear");
                    setTimeout(() => document.body.classList.remove("disappear"), 3000);
                }
        ,
        (_) => {
            let flash = document.getElementById("flash");
            flash.style.visibility = "visible";

                setTimeout(() => {flash.style.visibility = "hidden"},
             50);
        }
    ];
    function hideWatcher(watcher) {
        if (clicked) return;
        watcher.classList.add("disappear")
        clicked = true;
    }
    function handleWatcherClick(element) {
        if (clicked) {
            element.classList.remove("disappear")
            let randomEffect = effects[Math.floor(Math.random() * effects.length)];
            randomEffect(element);
            return
        }
        hideWatcher(element);
    }
    function onVisible(element, callback) {
        new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if(entry.intersectionRatio > 0) {
                    callback(element);
                    observer.disconnect();
                }
            });
        }).observe(element);
        if(!callback) return new Promise(r => callback=r);
    }
    watcher_elem = document.getElementById("watcher");
    onVisible(watcher_elem, ()=>{
        setTimeout(()=>{
            hideWatcher(watcher_elem)
        }, 1000)
    })
</script>